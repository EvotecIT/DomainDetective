<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net472;netstandard2.0;net8.0</TargetFrameworks>
		<LangVersion>Latest</LangVersion>
	</PropertyGroup>

        <ItemGroup>
                <PackageReference Include="DnsClientX" Version="0.4.0" />
                <PackageReference Include="MailKit" Version="4.12.1" />
                <PackageReference Include="PgpCore" Version="6.5.2" />
        </ItemGroup>

  <ItemGroup>
          <Folder Include="Dictionaries\" />
  </ItemGroup>
  <ItemGroup>
      <!-- DNSBL list is built into the code. Use LoadDNSBL to load external files if required. -->
  </ItemGroup>

  <ItemGroup>
    <PublicDnsJson Include="..\Data\DNS\PublicDNS.json" />
    <EmbeddedResource Include="PublicDNS.json.gz" LogicalName="Data.PublicDNS.json.gz" />
  </ItemGroup>


  <Target Name="EmbedPublicDns" BeforeTargets="CoreCompile">
    <!-- Use gzip on Unix-like systems -->
    <Exec Condition=" '$(OS)' != 'Windows_NT' " Command="gzip -c &quot;%(PublicDnsJson.FullPath)&quot; > &quot;$(ProjectDir)PublicDNS.json.gz&quot;" />
    <!-- Use PowerShell on Windows to create gzip archive -->
    <Exec Condition=" '$(OS)' == 'Windows_NT' " Command="powershell -NoProfile -Command &quot;$in=[IO.File]::OpenRead('%(PublicDnsJson.FullPath)'); $out=[IO.File]::Create('$(ProjectDir)PublicDNS.json.gz'); $gzip=[IO.Compression.GzipStream]::new($out,[IO.Compression.CompressionLevel]::Optimal); $in.CopyTo($gzip); $gzip.Dispose(); $in.Dispose(); $out.Dispose();&quot;" />
    <Touch Files="$(ProjectDir)PublicDNS.json.gz" />
  </Target>

  <Target Name="CleanPublicDns" AfterTargets="Clean">
    <Delete Files="$(ProjectDir)PublicDNS.json.gz" />
  </Target>
</Project>
